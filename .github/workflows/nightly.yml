name: Nightly Build

on:
  schedule:
    - cron: '0 3 * * *'
  workflow_dispatch:
    inputs:
      gradle_version:
        description: 'Gradle version to test'
        required: false
        default: 'current'
        type: choice
        options:
          - current
          - release-candidate
          - nightly
      deep_analysis:
        description: 'Run deep analysis'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  security-events: write
  actions: read

jobs:
  nightly-build:
    name: Nightly Build
    runs-on: macos-15
    timeout-minutes: 120
    
    strategy:
      fail-fast: false
      matrix:
        gradle-version: 
          - ${{ inputs.gradle_version || 'current' }}
          - wrapper
        java-version: [17, 21]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          lfs: true

      - name: Setup JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java-version }}
          check-latest: true

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: ${{ matrix.gradle-version }}
          cache-cleanup: always
          build-scan-publish: true
          build-scan-terms-of-use-url: 'https://gradle.com/terms-of-service'
          build-scan-terms-of-use-agree: 'yes'
          dependency-graph: generate-and-submit

      - name: System information
        run: |
          echo "System Information:"
          uname -a
          echo "Java version:"
          java -version
          echo "Gradle version:"
          ./gradlew --version
          echo "Available memory:"
          free -h || vm_stat

      - name: Full build and test
        run: |
          ./gradlew clean build --scan --parallel --build-cache
          ./gradlew assembleRelease --scan --parallel

      - name: Run extended tests
        if: inputs.deep_analysis
        run: |
          ./gradlew check integrationTest --scan --continue
          ./gradlew jacocoTestReport --scan

      - name: Security audit
        run: |
          ./gradlew dependencyCheckAnalyze --scan
          ./gradlew ossIndexAudit --scan || true

      - name: Performance benchmarks
        run: |
          echo "Running performance tests..."
          ./gradlew jmhJar --scan || true
          ./gradlew --profile clean assembleDebug

      - name: Upload comprehensive reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nightly-reports-gradle-${{ matrix.gradle-version }}-java-${{ matrix.java-version }}
          path: |
            **/build/reports/
            **/build/test-results/
            **/build/outputs/
          retention-days: 14
          compression-level: 6

      - name: Build summary
        if: always()
        run: |
          echo "## Nightly Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Gradle Version**: ${{ matrix.gradle-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Java Version**: ${{ matrix.java-version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Time**: $(date)" >> $GITHUB_STEP_SUMMARY

  compatibility-test:
    name: Compatibility Test
    runs-on: ubuntu-latest
    needs: nightly-build
    if: always()

    strategy:
      matrix:
        android-api: [28, 29, 30, 31, 32, 33, 34]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: true

      - name: Test API compatibility
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.android-api }}
          target: google_apis
          arch: x86_64
          script: |
            ./gradlew connectedAndroidTest --scan || true
            adb logcat -d > logcat-api-${{ matrix.android-api }}.txt

      - name: Upload API test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results-${{ matrix.android-api }}
          path: |
            logcat-api-${{ matrix.android-api }}.txt
            **/build/outputs/androidTest-results/
          retention-days: 7

  notification:
    name: Build Notification
    runs-on: ubuntu-latest
    needs: [nightly-build, compatibility-test]
    if: always() && github.event_name == 'schedule'

    steps:
      - name: Send status notification
        if: failure()
        run: |
          echo "Nightly build failed. Manual investigation required."
          echo "Check the workflow logs for detailed information."
